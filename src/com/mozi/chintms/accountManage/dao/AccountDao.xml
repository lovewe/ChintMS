<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mozi.chintms.accountManage.dao.AccountDao" >

     <resultMap id="SubAccountSeqResultMap" type="com.mozi.chintms.accountManage.model.SubAccountSeqForListInfo" >
		<id column="flowID" property="flowID" />
		<result column="tradeRemark" property="tradeRemark"  />
		<result column="userID" property="personID"/>
		<result column="Remark" property="tradeRemark"  />
		<result column="TransactionAmount" property="tradeAmount"  />
		<result column="orderID" property="orderID" />
		<result column="tradeTime" property="tradeTime" />
		<result column="days" property="days"  />
		<result column="ImgFilePath" property="fileName"  />
	</resultMap>

  <!-- 获取用户余额 -->
    <select id="getAmountByID" resultType="com.mozi.chintms.accountManage.model.SubAccountInfo" parameterType="java.lang.String">
		SELECT USER_ID as personID,Amount,id FROM dbo.SubAccount 
		WHERE State=1 AND USER_ID=#{_parameter}
	</select>
	
	 <select id="getUserInfoByPhone" resultType="com.mozi.chintms.accountManage.model.UserInfoByPhoneInfo" parameterType="java.lang.String">
		SELECT  User_ID as personID,USER_NAME AS  nickname,fullname,PHONE AS  phoneNum, ImgFilePath AS fileName
        FROM dbo.UserInfo 
		WHERE Status=1 AND PHONE=#{_parameter}
	</select>
	   
    <select id="getSubAccountSeqByUser" resultMap="SubAccountSeqResultMap" parameterType="com.mozi.chintms.accountManage.model.SubAccountSeqForListInfo">
		
SELECT TOP 10 * FROM (
SELECT  s.SN AS flowID ,
        t.PayerUserID AS UserID ,
        s.SubAccountID ,
        u.User_Name AS payeeUserName ,
        s.OrderID AS orderID ,
        s.CreateTime ,
        s.Remark AS tradeRemark ,
        u.ImgFilePath ,
        c.ChangeName ,
        CASE WHEN s.SeqFlag = 1
             THEN '-'
                  + CONVERT(VARCHAR(20), CAST(s.TransactionAmount AS DECIMAL(10,
                                                              2)))
             WHEN s.SeqFlag = 2
             THEN '+'
                  + CONVERT(VARCHAR(20), CAST(s.TransactionAmount AS DECIMAL(10,
                                                              2)))
        END AS TransactionAmount ,
        '成功' AS state ,
        CASE WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 0 THEN '今天'
             WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 1 THEN '昨天'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 1
             THEN '星期一'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 2
             THEN '星期二'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 3
             THEN '星期三'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 4
             THEN '星期四'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 5
             THEN '星期五'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 6
             THEN '星期六'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 7
             THEN '星期日'
        END AS tradeDate ,
        CASE WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 0
             THEN CONVERT(CHAR(5), s.CreateTime, 8)
             WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 1
             THEN CONVERT(CHAR(5), s.CreateTime, 8)
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 1
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 2
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 3
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 4
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 5
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 6
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 7
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
        END AS tradeTime ,
        CONVERT(VARCHAR(10), YEAR(s.CreateTime))
        + CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2)) AS days
FROM    dbo.TransferBILL t
        INNER JOIN dbo.SubAccountSeq s ON s.OrderID = t.OrderID
                                          AND s.UserID = t.PayerUserID
        INNER JOIN dbo.UserInfo u ON t.PayeeUserId = u.User_ID
        INNER JOIN ChangeType c ON s.ChangeType = c.ChangeType
WHERE  
<if test="personID != null" >
		 s.UserID =#{personID}
        </if>
UNION ALL
SELECT s.SN AS flowID ,
        t.PayerUserID AS UserID ,
        s.SubAccountID ,
        u.User_Name AS payeeUserName ,
        s.OrderID AS orderID ,
        s.CreateTime ,
        s.Remark AS tradeRemark ,
        u.ImgFilePath ,
        c.ChangeName ,
        CASE WHEN s.SeqFlag = 1
             THEN '-'
                  + CONVERT(VARCHAR(20), CAST(s.TransactionAmount AS DECIMAL(10,
                                                              2)))
             WHEN s.SeqFlag = 2
             THEN '+'
                  + CONVERT(VARCHAR(20), CAST(s.TransactionAmount AS DECIMAL(10,
                                                              2)))
        END AS TransactionAmount ,
        '成功' AS state ,
        CASE WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 0 THEN '今天'
             WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 1 THEN '昨天'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 1
             THEN '星期一'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 2
             THEN '星期二'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 3
             THEN '星期三'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 4
             THEN '星期四'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 5
             THEN '星期五'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 6
             THEN '星期六'
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 7
             THEN '星期日'
        END AS tradeDate ,
        CASE WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 0
             THEN CONVERT(CHAR(5), s.CreateTime, 8)
             WHEN DATEDIFF(DAY, s.CreateTime, GETDATE()) = 1
             THEN CONVERT(CHAR(5), s.CreateTime, 8)
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 1
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 2
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 3
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 4
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 5
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 6
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
             WHEN DATEPART(WEEKDAY, s.CreateTime + @@DateFirst - 1) = 7
             THEN CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2))
                  + '-' + CONVERT(VARCHAR(10), RIGHT(100 + DAY(s.CreateTime),
                                                     2))
        END AS tradeTime ,
        CONVERT(VARCHAR(10), YEAR(s.CreateTime))
        + CONVERT(VARCHAR(10), RIGHT(100 + MONTH(s.CreateTime), 2)) AS days
FROM    dbo.TransferBILL t
        INNER JOIN dbo.SubAccountSeq s ON s.OrderID = t.OrderID
                                          AND s.UserID = t.PayeeUserID
        INNER JOIN dbo.UserInfo u ON t.PayerUserId = u.User_ID
        INNER JOIN ChangeType c ON s.ChangeType = c.ChangeType
        WHERE  
         <if test="personID != null" >
		 s.UserID =#{personID}
        </if>
	
) AS table1
	<if test="flowID != null" >
	WHERE table1.CreateTime&lt;(SELECT CreateTime FROM SubAccountSeq WHERE SN=#{flowID} AND UserID=#{personID})
     </if>
ORDER BY table1.CreateTime DESC 
	</select>
	
	<!-- 转出流水写入 -->
	<insert id="insertSubAccountSeq" parameterType="com.mozi.chintms.accountManage.model.SubAccountSeqInfo">
	 
	  INSERT INTO dbo.SubAccountSeq
        ( SN ,
          SubAccountID ,
          UserID ,
          SubAccountType ,
          Amount ,
          TransactionAmount ,
          PreAmount ,
          SeqFlag ,
          ChangeType ,
          OrderID ,
          Remark ,
          CreateTime
        )
		VALUES  (NEWID(),#{subAccountID},#{userID},#{subAccountType},#{amount},#{tradeAmount},#{preAmount},#{seqFlag},#{changeType},#{orderID},#{tradeRemark},#{createTime})
	   
	</insert>
	
    	<!-- 转出流水写入 -->
	<insert id="insertTransferBILL" parameterType="com.mozi.chintms.accountManage.model.TransferInfo">
	INSERT INTO dbo.TransferBILL
        ( SN ,
          SrcUserID ,
          SubAccountType ,
          PayerUserID ,
          PayerSubAccountID ,
          TranType ,
          OrderID ,
          OrderNote ,
          PayeeUserId ,
          CreateTime ,
          State ,
          TranAmount
        )VALUES  ( NEWID(), #{payerUserID}, 1, #{payerUserID},1,'02',#{orderID},#{remark},#{payeeUserID},#{createTime},1,#{amount})
	</insert>

    <select id="selectTransferBILL" resultType="com.mozi.chintms.accountManage.model.TransferBillInfo" parameterType="java.lang.String">
		   SELECT  t.PayeeUserId,u.User_Name as payeeUserName,s.OrderID,'转账' AS orderNote,s.CreateTime,CASE WHEN s.SeqFlag=1 THEN   '+'+CONVERT(VARCHAR(20),CAST( s.TransactionAmount as   decimal(10,   2)))
							     WHEN s.SeqFlag=2 THEN   '-'+CONVERT(VARCHAR(20),CAST( s.TransactionAmount as   decimal(10,   2)))
								 END  AS tranAmount,'成功' AS state  FROM dbo.TransferBILL t
		INNER JOIN dbo.SubAccountSeq s ON s.OrderID = t.OrderID AND s.UserID = t.PayerUserID
		INNER JOIN dbo.UserInfo u ON t.PayeeUserID = u.User_ID
		WHERE t.PayeeUserId =#{_parameter}
    </select>

 <select id="getUserInfoByQRCode" resultType="com.mozi.chintms.accountManage.model.UserInfoByPhoneInfo" parameterType="java.lang.String">
 	SELECT TOP 1 User_ID as personID,USER_NAME AS  nickname,fullname,PHONE AS  phoneNum, ImgFilePath AS fileName FROM dbo.QRCODE q
	INNER JOIN UserInfo u ON q.personID = u.User_ID
	WHERE q.qrCode = #{_parameter}
 </select>

   <!-- 转账 -->
   <update id="updateAccounts" parameterType="com.mozi.chintms.accountManage.model.SubAccountSeqInfo">
	  UPDATE  SubAccount SET Amount=#{amount},LastUpdateTime=GETDATE()  WHERE USER_ID=#{userID}
   </update>

    <insert id="generateQRCode" parameterType="com.mozi.chintms.accountManage.model.QRCodeInfo">
	INSERT INTO dbo.QRCODE
        ( 
          qrCode,
          personID ,
          payoutORincome ,
          generateTime,
          ignoreValidate,
          status
        )
      VALUES  (#{qrCode},#{personID},#{payoutORIncome},#{generateTime},#{ignoreValidate},'0')
	</insert>
     
    <select id="getQRCode" resultType="com.mozi.chintms.accountManage.model.QRCodeInfo" parameterType="com.mozi.chintms.accountManage.model.QRCodeInfo">
          SELECT top 1 * FROM dbo.QRCODE WHERE 1=1
         
        <if test="personID != null" >
		AND personID =#{personID}
        </if>
         <if test="payoutORIncome != null" >
		AND payoutORIncome =#{payoutORIncome}
        </if>
         <if test="ignoreValidate != null" >
		 AND ignoreValidate =#{ignoreValidate}
        </if>
         <if test="qrCode != null" >
		 AND qrCode =#{qrCode}
        </if>
        order by generateTime desc
         
    </select>

   <update id="updateQRCode" parameterType="com.mozi.chintms.accountManage.model.QRCodeInfo">
	 UPDATE dbo.QRCODE SET qrCode=#{qrCode},generateTime=#{generateTime},status='0' WHERE personID=#{personID} AND ignoreValidate=#{ignoreValidate} AND payoutORincome=#{payoutORIncome}
   </update>
   
    <update id="updateQRCodeStatus" parameterType="com.mozi.chintms.accountManage.model.QRCodeInfo">
	 UPDATE dbo.QRCODE SET status =1  WHERE  qrCode=#{qrCode}
   </update>
</mapper>